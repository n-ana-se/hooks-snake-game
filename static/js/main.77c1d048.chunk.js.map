{"version":3,"sources":["components/Navigation.js","components/Field.js","components/Button.js","components/ManipulationPanel.js","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","timer","undefined","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","OppsiteDirection","Delta","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77c1d048.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">length: </span>\n                <div className=\"navigation-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficultuy: </span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                        <div\n                            className={`difficulty-button difficulty-up ${upVisibility}`}\n                            onClick={onUpDifficulty}\n                        ></div>\n                        <div\n                            className={`difficulty-button difficulty-down ${downVisibility}`}\n                            onClick={onDownDifficulty}\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation","import React from 'react'\n\nconst Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    })\n                })\n            }\n        </div>\n    )\n}\n\nexport default Field","import React from 'react'\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n            { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n            { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n            { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n        </div>\n    )\n}\n\nexport default Button","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange }) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon>\n            </button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                    <FontAwesomeIcon icon={faArrowUp}></FontAwesomeIcon>\n                </button>\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                    <FontAwesomeIcon icon={faArrowDown}></FontAwesomeIcon>\n                </button>\n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon>\n            </button>\n        </div>\n    )\n}\n\n　export default ManipulationPanel","export const getFoodPosition = (fieldSize, excludes) => {\n    while(true) {\n        const x = Math.floor(Math.random() * (fieldSize - 2)) + 1\n        const y = Math.floor(Math.random() * (fieldSize - 2)) + 1\n        const conflict = excludes.some(item => item.x === x && item.y === y)//[snake]の中の一つとでもかぶればtrueが返り、random関数が走る\n        if (!conflict) {\n            return { x, y }\n        }\n    }\n}\n\nexport const initFields = (fieldSize, snake) => {\n    const fields = []\n    for (let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n    return fields\n}","import React, { useState, useEffect, useCallback  } from 'react'\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils'\n\nconst initialPosition = { x: 17, y: 17 }//蛇の位置\nconst initialValues = initFields(35, initialPosition)//二次元配列\n\nconst defaultInterval = 100\nlet timer = undefined\n\nconst defaultDifficulty = 3\nconst Difficulty = [1000, 500, 100, 50, 10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nexport const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down\n})\n\nconst OppsiteDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'left',\n  down: 'up'\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 }\n})\n\nconst unsubscribe = () => {\n  if (!timer) {//timerに値が入ってるときにtrue,入ってないときにfalseとなる\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n  //はみ出し\n  if (position.y < 0 || position.x < 0) {\n    return true\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true\n  }\n  //中\n  return false\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)//初期の二次元配列の任意のところだけ更新されていく\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)//gameの状態\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {//レンダリング後に実行される関数(初回も)\n    setBody([initialPosition])//初回、毎回のレンダリング後、蛇の位置が真ん中になる\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(() => {//レンダリング後に実行される関数(初回も)\n    if (!body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])//timerで100msごとに[tick]の値が一つ増えて、その都度useEffectが動く\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n \n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setDirection(Direction.up)//最初に上に行くようにするやつ\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setFields(initFields(35, initialPosition))//fieldsの初期化\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {//わからん,manipulationpanelも\n      if (status !== GameStatus.playing) {\n        return \n      }\n      if (OppsiteDirection[direction] === newDirection) {\n        return\n      }\n      setDirection(newDirection)\n  }, [direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]//keyCodeは実際にキーボードから入力された番号\n      if (!newDirection) {\n        return\n      }\n      onChangeDirection(newDirection)\n    }\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()//pop: 末尾の配列を抜き出して削除\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {//foodだった時\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)//unshift: 配列の先頭に要素を追加\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footerd\">\n        <Button\n          status={status}\n          onStart={onStart}\n          onStop={onStop}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}